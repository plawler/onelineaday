# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                       controllers.Application.index

#Login
GET         /login                                  securesocial.controllers.LoginPage.login
GET         /logout                                 securesocial.controllers.LoginPage.logout

#SecureSocial
GET         /authenticate/:provider                 securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider                 securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                         securesocial.controllers.ProviderController.notAuthorized

# User Registration and password handling (only needed if you are using UsernamePasswordProvider)
GET         /signup                                 securesocial.controllers.Registration.startSignUp
POST        /signup                                 securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                          securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                          securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                                  securesocial.controllers.Registration.startResetPassword
POST        /reset                                  securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                           securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                           securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                               securesocial.controllers.PasswordChange.page
POST        /password                               securesocial.controllers.PasswordChange.handlePasswordChange

#Authentication
#GET         /login                                  controllers.Authentication.login
#GET         /logout                                 controllers.Authentication.logout
#POST        /authenticate                           controllers.Authentication.authenticate

#Projects
GET         /projects                               controllers.Projects.projects
GET         /projects/new                           controllers.Projects.newProject
GET         /projects/:id                           controllers.Projects.project(id: Long)
GET         /projects/:id/edit                      controllers.Projects.edit(id: Long)
POST        /projects                               controllers.Projects.add
POST        /projects/:id                           controllers.Projects.update(id: Long)
POST        /projects/:id/delete                    controllers.Projects.delete(id: Long)
POST        /projects/:id/retire                    controllers.Projects.retire(id: Long)

#Callbacks
GET         /callbacks/github                       controllers.Callbacks.github

#Repositories
GET         /github/repos                           controllers.Repositories.repos(projectId: Long)
GET         /repositories/:id/unlink                controllers.Repositories.unlink(id: Long)
POST        /repositories/link                      controllers.Repositories.link

#Dailies
GET         /projects/:projectId/dailies/new        controllers.Dailies.newDaily(projectId: Long)
GET         /dailies/:id                            controllers.Dailies.daily(id: Long)
GET         /dailies/:id/complete                   controllers.Dailies.editCompletion(id: Long)
GET         /dailies/:id/commits                    controllers.Dailies.commits(id: Long)
POST        /dailies                                controllers.Dailies.create
POST        /dailies/:id/delete                     controllers.Dailies.delete(id: Long)
POST        /dailies/:id/complete                   controllers.Dailies.complete(id: Long)

#Resources
GET         /resources/:id                          controllers.Resources.get(id: Long)
GET         /resources/:dailyId/new                 controllers.Resources.newResource(dailyId: Long)

POST        /resources                              controllers.Resources.create
POST        /resources/:id/delete                   controllers.Resources.delete(id: Long)

# Map static resources from the /public folder to the /assets URL path
GET         /webjars/*file                          controllers.WebJarAssets.at(file)
GET         /assets/*file                           controllers.Assets.at(path="/public", file)

# http://stackoverflow.com/questions/10436815/how-to-use-twitter-bootstrap-2-with-play-framework-2-x
